@using ProductCard.Data;
@using ProductCard.Models;



<div class="d-flex justify-content-center">
    <EditForm Model="@Product" OnValidSubmit="Save">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <div class="form-group">
            <InputText @bind-Value="@Product.ProductName" placeholder="Name" class="form-control m-5" style="width:650px;" />
            <ValidationMessage For="(() => Product.ProductName )" />
        </div>

        <div class="form-group">
            <InputNumber @bind-Value="@Product.Price" placeholder="Price" class="form-control  m-5"  style="width:650px;"/>
            <ValidationMessage For="(() => Product.Price )" />
        </div>

        <div class="form-group">
            <InputText @bind-Value="@Product.Image" placeholder="Image" class="form-control  m-5" style="width:650px;"/>
        </div>

        <button type="submit" class="btn btn-lg  m-5" style="background-color:rgba(131,58,180,1); color:white">Save Member</button>
    </EditForm>
</div>


@code {
    [Parameter]
    public ProductViewModel Product { get; set; }

    [Parameter]
    public EventCallback<ProductViewModel> SaveProduct { get; set; }

    private void Save()
    {
        SaveProduct.InvokeAsync(Product);
    }

}
