
@using ProductCard.Data;
@using ProductCard.Models;



<div class="text-center m-5">
    <h3 style="color:rgba(131,58,180,1);">Please Register to proceed...</h3>
</div>

<div class="d-flex justify-content-center">
    <EditForm Model="@User" OnValidSubmit="@Save">
        <DataAnnotationsValidator />

        <div class="form-group">
            <InputText @bind-Value="@User.UserName" placeholder="User Name" class="form-control  m-5" style="width:650px;" />
            <ValidationMessage For="(() => User.UserName )" />
        </div>

        <div class="form-group">
            <InputText @bind-Value="@User.Email" placeholder="Email" class="form-control  m-5" style="width:650px;" />
            <ValidationMessage For="(() => User.Email )" />
        </div>

        <div class="form-group">
            <InputText @bind-Value="@User.Password" type="password" placeholder="Password" class="form-control  m-5" style="width:650px;" />
            <ValidationMessage For="(() => User.Password )" />
        </div>

        <div class="text-center m-5">
            <h5 style="color:rgba(131,58,180,1);">Already have an account then   <a href="/login">Login</a></h5>
        </div>


        <button type="submit" class="btn btn-lg  m-5" style="background-color:rgba(131,58,180,1); color:white">Register</button>

    </EditForm>
</div>


@code {
    [Parameter]
    public UserViewModel User { get; set; } = new UserViewModel();

    [Parameter]
    public EventCallback<UserViewModel> SaveUser { get; set; }

    private void Save()
    {
        SaveUser.InvokeAsync(User);
    }
}
